// <auto-generated />
using System;
using FER.InfSus.Time.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FER.InfSus.Time.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240521183507_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeOfGenerating")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaskboardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("TaskboardId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TaskItemHistoryLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Changelog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaskItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("TaskItemHistoryLogs");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Taskboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Taskboards");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TimesheetEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("RemoteWork")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TaskItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.HasIndex("UserId");

                    b.ToTable("TimesheetEntries");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.UserTaskboardAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskboardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskboardId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTaskboardAssociations");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Report", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.Tenant", "Tenant")
                        .WithMany("Reports")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TaskItem", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.User", "AssignedUser")
                        .WithMany("TaskItems")
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("FER.InfSus.Time.Domain.Entities.Taskboard", "Taskboard")
                        .WithMany("TaskItems")
                        .HasForeignKey("TaskboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Taskboard");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TaskItemHistoryLog", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.TaskItem", "TaskItem")
                        .WithMany("HistoryLogs")
                        .HasForeignKey("TaskItemId");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Taskboard", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.Tenant", "Tenant")
                        .WithMany("Taskboards")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TimesheetEntry", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.TaskItem", "TaskItem")
                        .WithMany()
                        .HasForeignKey("TaskItemId");

                    b.HasOne("FER.InfSus.Time.Domain.Entities.User", "User")
                        .WithMany("TimesheetEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.User", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.UserTaskboardAssociation", b =>
                {
                    b.HasOne("FER.InfSus.Time.Domain.Entities.Taskboard", "Taskboard")
                        .WithMany("TaskboardUsers")
                        .HasForeignKey("TaskboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FER.InfSus.Time.Domain.Entities.User", "User")
                        .WithMany("UserTaskboards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Taskboard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.TaskItem", b =>
                {
                    b.Navigation("HistoryLogs");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Taskboard", b =>
                {
                    b.Navigation("TaskItems");

                    b.Navigation("TaskboardUsers");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.Tenant", b =>
                {
                    b.Navigation("Reports");

                    b.Navigation("Taskboards");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FER.InfSus.Time.Domain.Entities.User", b =>
                {
                    b.Navigation("TaskItems");

                    b.Navigation("TimesheetEntries");

                    b.Navigation("UserTaskboards");
                });
#pragma warning restore 612, 618
        }
    }
}
